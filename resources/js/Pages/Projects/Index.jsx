import AuthenticatedLayout from '@/Layouts/AuthenticatedLayout';
import { Head, Link, router } from '@inertiajs/react';
import { useState } from 'react';
import ProjectCard from '@/Components/ProjectCard';

export default function Index({ auth, projects, filters }) {
    const [search, setSearch] = useState(filters.search || '');
    const [status, setStatus] = useState(filters.status || '');
    const [showFilters, setShowFilters] = useState(!!(filters.search || filters.status));

    const handleSearch = (e) => {
        e.preventDefault();
        router.get(route('projects.index'), { search, status }, {
            preserveState: true,
            preserveScroll: true,
        });
    };

    const handleStatusChange = (e) => {
        setStatus(e.target.value);
        router.get(route('projects.index'), { search, status: e.target.value }, {
            preserveState: true,
            preserveScroll: true,
        });
    };

    const clearFilters = () => {
        setSearch('');
        setStatus('');
        setShowFilters(false);
        router.get(route('projects.index'), {}, {
            preserveState: true,
            preserveScroll: true,
        });
    };

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
    const getProjectStats = () => {
        const allProjects = projects.data;
        return {
            total: allProjects.length,
            active: allProjects.filter(p => p.status === 'active').length,
            completed: allProjects.filter(p => p.status === 'completed').length,
            onHold: allProjects.filter(p => p.status === 'on_hold').length,
            cancelled: allProjects.filter(p => p.status === 'cancelled').length,
        };
    };

    const stats = getProjectStats();

    return (
        <AuthenticatedLayout
            user={auth.user}
            header={<h2 className="font-semibold text-xl text-text-primary leading-tight">–ü—Ä–æ–µ–∫—Ç—ã</h2>}
        >
            <Head title="–ü—Ä–æ–µ–∫—Ç—ã" />

            <div className="space-y-6">
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è */}
                <div className="flex justify-between items-center">
                    <div>
                        <h1 className="text-2xl font-bold text-text-primary">–ü—Ä–æ–µ–∫—Ç—ã</h1>
                        <p className="text-text-secondary mt-1">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –∑–∞–¥–∞—á–∞–º–∏</p>
                    </div>
                    <div className="flex space-x-3">
                        <button
                            onClick={() => setShowFilters(!showFilters)}
                            className="btn btn-secondary inline-flex items-center"
                        >
                            <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
                            </svg>
                            –§–∏–ª—å—Ç—Ä—ã
                        </button>
                        <Link
                            href={route('projects.create')}
                            className="btn btn-primary inline-flex items-center"
                        >
                            <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                            </svg>
                            –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
                        </Link>
                    </div>
                </div>

                {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                <div className="grid grid-cols-1 md:grid-cols-5 gap-4">
                    <div className="card text-center">
                        <div className="text-2xl font-bold text-text-primary mb-1">{stats.total}</div>
                        <div className="text-sm text-text-secondary">–í—Å–µ–≥–æ</div>
                    </div>
                    <div className="card text-center">
                        <div className="text-2xl font-bold text-accent-green mb-1">{stats.active}</div>
                        <div className="text-sm text-text-secondary">–ê–∫—Ç–∏–≤–Ω—ã—Ö</div>
                    </div>
                    <div className="card text-center">
                        <div className="text-2xl font-bold text-accent-blue mb-1">{stats.completed}</div>
                        <div className="text-sm text-text-secondary">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö</div>
                    </div>
                    <div className="card text-center">
                        <div className="text-2xl font-bold text-accent-yellow mb-1">{stats.onHold}</div>
                        <div className="text-sm text-text-secondary">–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö</div>
                    </div>
                    <div className="card text-center">
                        <div className="text-2xl font-bold text-accent-red mb-1">{stats.cancelled}</div>
                        <div className="text-sm text-text-secondary">–û—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö</div>
                    </div>
                </div>

                {/* –§–∏–ª—å—Ç—Ä—ã */}
                {showFilters && (
                    <div className="card">
                        <div className="flex items-center justify-between mb-4">
                            <h3 className="card-title">–§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</h3>
                            <button
                                onClick={clearFilters}
                                className="text-sm text-accent-red hover:text-accent-red/80 transition-colors"
                            >
                                –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
                            </button>
                        </div>
                        <form onSubmit={handleSearch} className="space-y-4">
                            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                                <div>
                                    <label className="form-label">
                                        –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
                                    </label>
                                    <input
                                        type="text"
                                        value={search}
                                        onChange={(e) => setSearch(e.target.value)}
                                        placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
                                        className="form-input"
                                    />
                                </div>
                                <div>
                                    <label className="form-label">
                                        –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞
                                    </label>
                                    <select
                                        value={status}
                                        onChange={handleStatusChange}
                                        className="form-select"
                                    >
                                        <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                                        <option value="active">–ê–∫—Ç–∏–≤–Ω—ã–π</option>
                                        <option value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω</option>
                                        <option value="on_hold">–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</option>
                                        <option value="cancelled">–û—Ç–º–µ–Ω–µ–Ω</option>
                                    </select>
                                </div>
                                <div className="flex items-end space-x-2">
                                    <button
                                        type="submit"
                                        className="btn btn-primary flex-1"
                                    >
                                        <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                                        </svg>
                                        –ü–æ–∏—Å–∫
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                )}

                {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ –ø–æ–∏—Å–∫—É */}
                {(search || status) && projects.data.length === 0 && (
                    <div className="card bg-gradient-to-r from-accent-yellow/10 to-accent-orange/10 border-accent-yellow/20">
                        <div className="flex items-start space-x-3">
                            <div className="text-accent-yellow text-xl">üí°</div>
                            <div>
                                <h3 className="font-medium text-text-primary mb-1">–°–æ–≤–µ—Ç—ã –ø–æ –ø–æ–∏—Å–∫—É</h3>
                                <div className="text-sm text-text-secondary space-y-1">
                                    <p>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞</p>
                                    <p>‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –æ–±—â–∏–µ —Ç–µ—Ä–º–∏–Ω—ã</p>
                                    <p>‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã–±—Ä–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å</p>
                                    <p>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <button onClick={clearFilters} className="text-accent-blue hover:underline">–æ—á–∏—Å—Ç–∫—É —Ñ–∏–ª—å—Ç—Ä–æ–≤</button> –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–æ–∏—Å–∫–∞</p>
                                </div>
                            </div>
                        </div>
                    </div>
                )}

                {/* –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
                {projects.data.length > 0 ? (
                    <div className="space-y-4">
                        <div className="flex items-center justify-between">
                            <h3 className="text-lg font-semibold text-text-primary">
                                –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {projects.data.length}
                            </h3>
                            <div className="text-sm text-text-secondary">
                                {search && `–ü–æ–∏—Å–∫: "${search}"`}
                                {status && ` ‚Ä¢ –°—Ç–∞—Ç—É—Å: ${status}`}
                            </div>
                        </div>
                        <div className="grid-cards">
                            {projects.data.map((project) => (
                                <ProjectCard key={project.id} project={project} />
                            ))}
                        </div>
                    </div>
                ) : (
                    <div className="card text-center">
                        <svg className="w-16 h-16 text-text-muted mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                        </svg>
                        <h3 className="text-lg font-medium text-text-secondary mb-2">
                            {search || status ? '–ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã' : '–ü—Ä–æ–µ–∫—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}
                        </h3>
                        <p className="text-text-muted mb-4">
                            {search || status 
                                ? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –æ—á–∏—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã' 
                                : '–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –∑–∞–¥–∞—á–∞–º–∏'
                            }
                        </p>
                        {!search && !status && (
                            <Link
                                href={route('projects.create')}
                                className="btn btn-primary inline-flex items-center"
                            >
                                <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                                </svg>
                                –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
                            </Link>
                        )}
                    </div>
                )}

                {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
                {projects.data.length > 0 && projects.links && projects.links.length > 3 && (
                    <div className="flex justify-center">
                        <nav className="flex space-x-2">
                            {projects.links.map((link, index) => (
                                <Link
                                    key={index}
                                    href={link.url}
                                    className={`px-3 py-2 rounded-lg text-sm font-medium transition-colors ${
                                        link.active
                                            ? 'bg-secondary-bg text-text-primary'
                                            : link.url
                                            ? 'bg-card-bg text-text-primary hover:bg-secondary-bg'
                                            : 'bg-card-bg text-text-muted cursor-not-allowed'
                                    }`}
                                    dangerouslySetInnerHTML={{ __html: link.label }}
                                />
                            ))}
                        </nav>
                    </div>
                )}
            </div>
        </AuthenticatedLayout>
    );
} 